/* Generated By:JavaCC: Do not edit this line. MapCSSParserConstants.java */
package org.openstreetmap.josm.gui.mappaint.mapcss.parsergen;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MapCSSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PP_AND = 1;
  /** RegularExpression Id. */
  int PP_OR = 2;
  /** RegularExpression Id. */
  int PP_NOT = 3;
  /** RegularExpression Id. */
  int PP_SUPPORTS = 4;
  /** RegularExpression Id. */
  int PP_MEDIA = 5;
  /** RegularExpression Id. */
  int PP_NEWLINECHAR = 6;
  /** RegularExpression Id. */
  int PP_WHITESPACE = 7;
  /** RegularExpression Id. */
  int PP_COMMENT_START = 8;
  /** RegularExpression Id. */
  int PP_COMMENT_END = 9;
  /** RegularExpression Id. */
  int SET = 11;
  /** RegularExpression Id. */
  int IDENT = 12;
  /** RegularExpression Id. */
  int UINT = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int PREDEFINED = 15;
  /** RegularExpression Id. */
  int REGEX_CHAR_WITHOUT_STAR = 16;
  /** RegularExpression Id. */
  int REGEX = 17;
  /** RegularExpression Id. */
  int LBRACE = 18;
  /** RegularExpression Id. */
  int RBRACE = 19;
  /** RegularExpression Id. */
  int LPAR = 20;
  /** RegularExpression Id. */
  int RPAR = 21;
  /** RegularExpression Id. */
  int COMMA = 22;
  /** RegularExpression Id. */
  int COLON = 23;
  /** RegularExpression Id. */
  int PP_SOMETHING_ELSE = 24;
  /** RegularExpression Id. */
  int UFLOAT = 25;
  /** RegularExpression Id. */
  int H = 26;
  /** RegularExpression Id. */
  int HEXCOLOR = 27;
  /** RegularExpression Id. */
  int S = 28;
  /** RegularExpression Id. */
  int STAR = 29;
  /** RegularExpression Id. */
  int SLASH = 30;
  /** RegularExpression Id. */
  int LSQUARE = 31;
  /** RegularExpression Id. */
  int RSQUARE = 32;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 33;
  /** RegularExpression Id. */
  int LESS_EQUAL = 34;
  /** RegularExpression Id. */
  int GREATER = 35;
  /** RegularExpression Id. */
  int LESS = 36;
  /** RegularExpression Id. */
  int EQUAL = 37;
  /** RegularExpression Id. */
  int EXCLAMATION = 38;
  /** RegularExpression Id. */
  int TILDE = 39;
  /** RegularExpression Id. */
  int DCOLON = 40;
  /** RegularExpression Id. */
  int SEMICOLON = 41;
  /** RegularExpression Id. */
  int PIPE = 42;
  /** RegularExpression Id. */
  int PIPE_Z = 43;
  /** RegularExpression Id. */
  int PLUS = 44;
  /** RegularExpression Id. */
  int MINUS = 45;
  /** RegularExpression Id. */
  int AMPERSAND = 46;
  /** RegularExpression Id. */
  int QUESTION = 47;
  /** RegularExpression Id. */
  int DOLLAR = 48;
  /** RegularExpression Id. */
  int CARET = 49;
  /** RegularExpression Id. */
  int FULLSTOP = 50;
  /** RegularExpression Id. */
  int DEG = 51;
  /** RegularExpression Id. */
  int ELEMENT_OF = 52;
  /** RegularExpression Id. */
  int CROSSING = 53;
  /** RegularExpression Id. */
  int COMMENT_START = 54;
  /** RegularExpression Id. */
  int UNEXPECTED_CHAR = 55;
  /** RegularExpression Id. */
  int COMMENT_END = 56;

  /** Lexical state. */
  int PREPROCESSOR = 0;
  /** Lexical state. */
  int PP_COMMENT = 1;
  /** Lexical state. */
  int DEFAULT = 2;
  /** Lexical state. */
  int COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"@supports\"",
    "\"@media\"",
    "<PP_NEWLINECHAR>",
    "<PP_WHITESPACE>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 10>",
    "\"set\"",
    "<IDENT>",
    "<UINT>",
    "<STRING>",
    "<PREDEFINED>",
    "<REGEX_CHAR_WITHOUT_STAR>",
    "<REGEX>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\":\"",
    "<PP_SOMETHING_ELSE>",
    "<UFLOAT>",
    "<H>",
    "<HEXCOLOR>",
    "<S>",
    "\"*\"",
    "\"/\"",
    "\"[\"",
    "\"]\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"=\"",
    "\"!\"",
    "\"~\"",
    "\"::\"",
    "\";\"",
    "\"|\"",
    "\"|z\"",
    "\"+\"",
    "\"-\"",
    "\"&\"",
    "\"?\"",
    "\"$\"",
    "\"^\"",
    "\".\"",
    "\"\\u00b0\"",
    "\"\\u2208\"",
    "\"\\u29c9\"",
    "\"/*\"",
    "<UNEXPECTED_CHAR>",
    "\"*/\"",
    "<token of kind 57>",
  };

}
